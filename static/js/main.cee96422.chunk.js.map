{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onTodoSelect","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","filter","onFilterChange","onChange","event","status","target","value","query","placeholder","trim","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onModalChange","useState","isLoaded","setIsLoaded","user","setUser","loadUser","a","userId","userFromServer","reject","useEffect","href","email","name","App","setTodos","setFilter","modalTodo","setModalTodo","loadTodos","todosFromServer","visibleTodos","queryLoweCase","toLowerCase","titleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cee96422.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onTodoSelect: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onTodoSelect,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodoSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={`far ${selectedTodo?.id === todo.id ? 'fa-eye-slash' : 'fa-eye'}`} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  filter: { status: string, query: string },\n  onFilterChange(filter: { status: string, query: string }): void,\n};\n\nexport const TodoFilter = ({ filter, onFilterChange }: Props) => {\n  return (\n    <>\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              onChange={(event) => onFilterChange({\n                status: event.target.value,\n                query: filter.query,\n              })}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={filter.query}\n            onChange={(event) => onFilterChange({\n              status: filter.status,\n              query: event.target.value,\n            })}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {filter.query.trim() !== '' && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => onFilterChange({\n                  status: filter.status,\n                  query: '',\n                })}\n              />\n            </span>\n          )}\n        </p>\n      </form>\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  onModalChange: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onModalChange }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = async () => {\n    try {\n      const userFromServer = await getUser(todo.userId);\n\n      setUser(userFromServer);\n      setIsLoaded(true);\n    } catch (error) {\n      Promise.reject();\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onModalChange(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">\n                {todo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState([] as Todo[]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [filter, setFilter] = useState({ status: '', query: '' });\n  const [modalTodo, setModalTodo] = useState<Todo | null>(null);\n\n  const loadTodos = async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n      setIsLoaded(true);\n    } catch (error) {\n      Promise.reject();\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const visibleTodos = todos.filter(todo => {\n    const queryLoweCase = filter.query.toLowerCase().trim();\n    const titleLowerCase = todo.title.toLowerCase();\n    let status = null;\n\n    switch (filter.status) {\n      case 'active':\n        status = false;\n        break;\n      case 'completed':\n        status = true;\n        break;\n      default:\n        status = null;\n        break;\n    }\n\n    return status !== null\n      ? titleLowerCase.includes(queryLoweCase) && todo.completed === status\n      : titleLowerCase.includes(queryLoweCase);\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                onFilterChange={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded\n                ? <Loader />\n                : <TodoList todos={visibleTodos} onTodoSelect={setModalTodo} selectedTodo={modalTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalTodo && <TodoModal todo={modalTodo} onModalChange={setModalTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}